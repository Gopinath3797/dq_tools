version: 2

sources:
  - name: dq_tools
    schema: "{{ var('dbt_dq_tool_schema') }}"
    tables:
      - name: dq_issue_log
        tests:
          - dq_tools.expression_is_true_db:
              where: coalesce(ref_column,'') != ''
              expression: coalesce(ref_table,'') != ''
        columns:
          - name: check_timestamp
            description: Test run timestamp
            tests:
              - dq_tools.not_null_where_db
          - name: table_name
            description: table scope which test runs against
            tests:
              - dq_tools.not_null_where_db
          - name: column_name
            description: column scope which test runs against. can be empty as the test can run against multiple columns
          - name: ref_table
            description: ref table when test runs
          - name: ref_column
            description: ref table.column when test runs
          - name: dq_issue_type
            description: |
              data quality issue type - normally generated from test functionality name

              list of common values:
                - accepted value
                - expression
                - null value
                - reference integrity
                - recency
                - equal row count
                - equality
                - uniqueness
            tests:
              - dq_tools.not_null_where_db
          - name: invocation_id
            description: invocation uuid generated by dbt
            tests:
              - dq_tools.not_null_where_db
          - name: dq_model
            description: the dbt model name or its sub query if having `where` parameter
            tests:
              - dq_tools.not_null_where_db
              - dq_tools.expression_is_true_db:  # singular test error should not exists
                  expression: dq_model != 'assert_intentional_error'
              - dq_tools.expression_is_true_db: # generic test error should not exists
                  where: table_name like '%.test_failures' and coalesce(column_name,'') = ''
                  expression: dq_model not like 'dq_tools_expression_is_true_db_test_failures_1_0%'
          - name: severity
            description: warn or error
            tests:
              - dq_tools.not_null_where_db
              - dq_tools.accepted_values_where_db:
                  values: [
                    'warn',
                    'error'
                  ]
          - name: kpi_category
            description: |
              data quality kpis

              list of values:
                - other (will not be counted)
                - validity
                - completeness
                - timeliness
                - consistency
                - uniqueness
                - accuracy
            tests:
              - dq_tools.not_null_where_db
              - dq_tools.accepted_values_where_db:
                  values: [
                    'Other',
                    'Uniqueness',
                    'Consistency',
                    'Validity',
                    'Timeliness',
                    'Completeness',
                    'Accuracy',
                  ]
          - name: no_of_records
            tests:
              - dq_tools.not_null_where_db:
                  where: coalesce(table_name,'') != ''
              - dq_tools.expression_is_true_db:
                  where: coalesce(ref_table,'') != ''
                  expression: no_of_records >= 0
          - name: no_of_records_failed
            tests:
              - dq_tools.not_null_where_db
              - dq_tools.expression_is_true_db:
                  expression: no_of_records_failed >= 0
              - dq_tools.expression_is_true_db:
                  where: lower(dq_model) like '%failure%'
                  expression: no_of_records_failed > 0
